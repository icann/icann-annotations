#A Paul Hoffman
#C Many RFCs say they update RFC 1034, but don't
#L 1
<p>
Many of the RFCs that are listed as updating RFC 1034 actually just
mention it, but don't actually update anything here.
For example, many of them simply define new RRtypes, which is not really an update
to RFC 1034, just to the IANA registry it created.
The RFCs that do update RFC 1034 are listed throughout this document.
</p>
####################
#A Paul Hoffman
#C RFC 1982 has a better definition of serial number arithmetic
#L 1503
<p>@@RFC1982@@ clarifies how serial number arithmetic should be performed.
The abstract says "The DNS has long relied upon serial number arithmetic,
a concept which has never really been defined, certainly not in an
IETF document, though which has been widely understood.  This memo
supplies the missing definition."
</p>
####################
#A Paul Hoffman
#C RFC 2181 updates the use of the SOA record
#L 816
<p>
Section 7.1 of @@RFC2181@@ says:
<br>
<pre>
RFC1034, in section 3.7, indicates that the authority section of an
authoritative answer may contain the SOA record for the zone from
which the answer was obtained.  When discussing negative caching,
RFC1034 section 4.3.4 refers to this technique but mentions the
additional section of the response.  The former is correct, as is
implied by the example shown in section 6.2.5 of RFC1034.  SOA
records, if added, are to be placed in the authority section.
</pre>
</p>
####################
#A Paul Hoffman
#C RFC 2181 updates the use of the SOA record
#L 1420
<p>
Section 7.1 of @@RFC2181@@ says:
<br>
<pre>
RFC1034, in section 3.7, indicates that the authority section of an
authoritative answer may contain the SOA record for the zone from
which the answer was obtained.  When discussing negative caching,
RFC1034 section 4.3.4 refers to this technique but mentions the
additional section of the response.  The former is correct, as is
implied by the example shown in section 6.2.5 of RFC1034.  SOA
records, if added, are to be placed in the authority section.
</pre>
</p>
####################
#A Paul Hoffman
#C RFC 2308 updates the method for negative caching
#L 1420
<p>
@@RFC2308@@ is a major restatement and update to how negative caching should
be implemented. Its abstract begins:
<br>
<pre>
[RFC1034] provided a description of how to cache negative responses.
It however had a fundamental flaw in that it did not allow a name
server to hand out those cached responses to other resolvers, thereby
greatly reducing the effect of the caching.  This document addresses
issues raise in the light of experience and replaces [RFC1034 Section
4.3.4].
</pre>
</p>
####################
#A Paul Hoffman
#C RFC 4034 changes what else can exist with a CNAME, namely RRSIG RRs
#L 780
<p>
Section 3 of @@RFC4034@@ says:
<br>
<pre>
Because every authoritative RRset in a zone must be protected by a
digital signature, RRSIG RRs must be present for names containing a
CNAME RR.  This is a change to the traditional DNS specification
[RFC1034], which stated that if a CNAME is present for a name, it is
the only type allowed at that name.  A RRSIG and NSEC (see Section 4)
MUST exist for the same name as a CNAME resource record in a signed
zone.
</pre>
</p>
<p>
Similar wording is found in Section 2.5 of @@RFC4035@@.
</p>
####################
#A Paul Hoffman
#C RFC 4035 changes what else can exist with a zone cut, namely NSEC and DS RRs
#L 1087
<p>
Section 2.6 of @@RFC4035@@ says:
<br>
<pre>
DNSSEC introduced two new RR types that are unusual in that they can
appear at the parental side of a zone cut.  At the parental side of a
zone cut (that is, at a delegation point), NSEC RRs are REQUIRED at
the owner name.  A DS RR could also be present if the zone being
delegated is signed and seeks to have a chain of authentication to
the parent zone.  This is an exception to the original DNS
specification ([RFC1034]), which states that only NS RRsets could
appear at the parental side of a zone cut.

This specification updates the original DNS specification to allow
NSEC and DS RR types at the parent side of a zone cut.  These RRsets
are authoritative for the parent when they appear at the parent side
of a zone cut.
</pre>
</p>
####################
#A Paul Hoffman
#C RFC 4343 clarifies what is meant by upper-case and lower-case
#L 373
<p>All of @@RFC4343@@ is relevant to any discussion of the
case of characters.</p>
####################
#A Paul Hoffman
#C RFC 4343 clarifies what is meant by upper-case and lower-case
#L 583
<p>All of @@RFC4343@@ is relevant to any discussion of the
case of characters.</p>
####################
#A Paul Hoffman
#C RFC 4592 clarifies and expands on the definition of wildcards
#L 1344
<p>
All of @@RFC4592@@ is relevant to any discussion wildcards.
The abstract says "    This is an update to the wildcard definition of RFC 1034.  The
interaction with wildcards and CNAME is changed, an error condition
is removed, and the words defining some concepts central to wildcards
are changed.  The overall goal is not to change wildcards, but to
refine the definition of RFC 1034."
</p>
####################
#A Paul Hoffman
#C RFC 5936 re-specifies how AXFR works
#L 1530
<p>
@@RFC5936@@ is a complete re-definition of AXFR. Its abstract says:
"The definition of AXFR has proven insufficient in detail, thereby
forcing implementations intended to be compliant to make assumptions,
impeding interoperability.  Yet today we have a satisfactory set of
implementations that do interoperate.  This document is a new
definition of AXFR -- new in the sense that it records an accurate
definition of an interoperable AXFR mechanism."
</p>
####################
#A Paul Hoffman
#C RFC 8020 clarifies empty non-terminals and zone cuts
#L 349
<p>
@@RFC8020@@ extensively describes how zone cuts are determined,
particularly in the presence of empty non-terminals.
It says "This document states clearly that when a DNS resolver receives a
response with a response code of NXDOMAIN, it means that the domain
name which is thus denied AND ALL THE NAMES UNDER IT do not exist."
<p>
Section 3.1 of RFC 8020 says:
<br>
<pre>
This document clarifies possible ambiguities in [RFC1034] that did
not clearly distinguish Empty Non-Terminal (ENT) names ([RFC7719])
from nonexistent names, and it refers to subsequent documents that
do.  ENTs are nodes in the DNS that do not have resource record sets
associated with them but have descendant nodes that do.  The correct
response to ENTs is NODATA (i.e., a response code of NOERROR and an
empty answer section).  Additional clarifying language on these
points is provided in Section 7.16 of [RFC2136] and in Sections 2.2.2
and 2.2.3 of [RFC4592].
</pre>
</p>
</p>
####################
#A Paul Hoffman
#C RFC 8482 allows for minimal responses for ANY queries
#L 1266
<p>
@@RFC8482@@ gives guidance on what the proper response to
and query for type ANY would be.
In particular, Section 7 of RFC 8482 updates the processing
instructions in RFC 1034 for ANY queries.
</p>
####################
#A Paul Hoffman
#C RFC 8767 allows caching of records past their TTL
#L 649
<p>
The abstract of @@RFC8767@@ says:
"This document defines a method (serve-stale) for recursive resolvers
to use stale DNS data to avoid outages when authoritative nameservers
cannot be reached to refresh expired data."
The reason this updates RFC 1034 is that the definition of TTL in
RFC 1034 says "The TTL describes how
long a RR can be cached before it should be discarded."
RFC 8767 softens that "should" and describes various scenarios when
it is acceptable to serve stale data.
</p>
